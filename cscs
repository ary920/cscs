#Text-Based CAPTCHA  
import string 
import random 
def text_captcha(): 
    captcha=''.join(random.choices(string.ascii_letters + string.digits,k=5)) 
    print(f"The Captcha is: {captcha}") 
    user_input=input("Please Enter the Text: ") 
    if user_input==captcha: 
        print("The captcha is passed.") 
    else: 
        print("CAPTCHA Failed. Try Again.") 
text_captcha()

#---------------------------------------------------------------------------------
# Math-Based CAPTCHA
def math_captcha(): 
    num1=random.randint(1,10) 
    num2=random.randint(1,10) 
    oparations=random.choice(['*','+','-']) 
    captcha_text=f"{num1} {oparations} {num2}" 
    answre=eval(captcha_text) 
    print(f"Solve this equestion {captcha_text}") 
    user_input=input("input the answer= ") 
    if int(user_input)==answre: 
        print("the captcha is passed") 
    else: 
        print("the captcha is failed. Try Again.") 
math_captcha()

#---------------------------------------------------------------------------------
#A Python Script That Deletes Files 
import os 
def delete_files_in_directory(directory): 
    for filename in os.listdir(directory): 
        file_path = os.path.join(directory, filename) 
         
        # If it's a file, delete it 
        if os.path.isfile(file_path): 
            os.remove(file_path) 
            print(f"Deleted file: {file_path}") 
         
        # If it's a directory, go inside and delete files recursively 
        elif os.path.isdir(file_path): 
            delete_files_in_directory(file_path) 
 
# Specify a directory to delete files in (CAUTION: Don't run this on a real directory) 
directory_to_delete = "/path/to/some/directory" 
delete_files_in_directory(directory_to_delete)


#---------------------------------------------------------------------------------
# Create a File and Write to It
def create_and_write_file(directory, filename, content): 
    # Create the full path to the file 
    file_path = os.path.join(directory, filename) 
     
    # Open the file in write mode (it will create the file if it doesn't exist) 
    with open(file_path, "w") as file: 
        file.write(content) 
        print(f"Created and wrote to file: {file_path}") 
 
# Specify the directory where you want to create the file 
directory_to_create_file = "/path/to/some/directory" 
 
# Create a file named 'example.txt' and write some content into it 
create_and_write_file(directory_to_create_file, "example.txt", "This is some sample  text.") 
